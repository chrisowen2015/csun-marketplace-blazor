@inherits LayoutComponentBase
@layout MainLayout
@inject NavigationManager _navMan



<MudLayout Class="layout-content">
    <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="@_theme" />
    @*Top Bar for Search, logo*@
    <MudAppBar Elevation="2" DisableGutters="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Class="hamburger" OnClick="@ToggleDrawer" />
        <MudButton Class="site-header-label-button" OnClick="@(()=>_navMan.NavigateTo("/"))">
            <MudImage Height="40" Src="https://cdn.discordapp.com/attachments/911058579073675284/951718035683672084/csun_logo.png" />
            <MudText Color="Color.Default" Class="site-header-label">
                Marketplace
            </MudText>
        </MudButton>
        <MudButton Class="filter-button" Variant="Variant.Text">
            <MudText Class="filter-button-text">
                Filter
            </MudText>
            <MudIcon Icon="@Icons.Material.Filled.ArrowDropDown" Size="Size.Medium" />
        </MudButton>
        <MudTextField OnAdornmentClick="@searchFunction" FullWidth="true" AdornmentIcon="@Icons.Material.Filled.Search" Adornment="Adornment.End" Class="search-bar" Label="Search CSUN Marketplace" DisableUnderLine="true" Variant="Variant.Filled" @bind-Value="searchTerm" />
        <MudSwitch Class="dark-mode-toggle" T="bool" @bind-Checked="@_isDarkMode" Color="Color.Primary" Label="Toggle Dark Mode" />
        <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" />
        <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" OnClick="@(() => _navMan.NavigateTo("/cart"))"/>
        <MudIconButton Icon="@Icons.Material.Filled.Help" />
        <LoginDisplay />
        <MudIconButton Class="right-top-button" Icon="@Icons.Material.Rounded.Settings" />
    </MudAppBar>

    <MudTabs Centered="true" Rounded="false" Border="true">
        <MudTabPanel Icon="@Icons.Material.Filled.Home" Text="Store Home" OnClick="@(() => _navMan.NavigateTo("/"))" />
        <MudTabPanel Icon="@Icons.Material.Filled.Add" Text="New Listing" OnClick="@(() => _navMan.NavigateTo("/product-form"))" />

        <MudTabPanel Icon="@Icons.Material.Filled.TrendingUp" Text="Popular Items" />

        <MudTabPanel Icon="@Icons.Material.Filled.Bookmark" Text="Bookmarked" />

        <MudTabPanel Icon="@Icons.Material.Filled.History" Text="Order History" />

        <MudTabPanel Icon="@Icons.Material.Filled.LibraryBooks" Text="Textbooks" />

        <MudTabPanel Icon="@Icons.Material.Filled.Monitor" Text="Electronics" />

        <MudTabPanel Icon="@Icons.Material.Filled.DynamicForm" Text="School Supplies" />

    </MudTabs>

    <MudDrawer ClipMode="DrawerClipMode.Docked" @bind-Open="@drawerOpen">
        <MudDrawerHeader Class="drawer-header">
            <MudButton FullWidth="true" Variant=Variant.Text>
                <MudIcon Icon="@Icons.Material.Filled.AccountCircle" />
                <MudText Class="drawer-header">
                    Hello, Signed In User
                </MudText>
            </MudButton>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink>
                All Products
            </MudNavLink>
            <MudNavLink>
                Popular Items
            </MudNavLink>
            <MudNavLink>
                Textbooks
            </MudNavLink>
            <MudNavLink>
                Electronics
            </MudNavLink>
            <MudNavLink>
                School Supplies
            </MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        @Body

    </MudMainContent>

    <MudAppBar Dense="true" Bottom="true">
        <MudDivider />
    </MudAppBar>
</MudLayout>


@code {
    private MudTheme _theme = new();
    private bool _isDarkMode = true;

    public string? searchTerm { get; set; }
    public List<string> categories = new List<String> { "Textbooks", "Electronics", "School Supplies", };

    public void myFunction()
    {

    }

    bool drawerOpen = false;

    void ToggleDrawer()
    {
        drawerOpen = !drawerOpen;
    }



    /*
     * This is where our search function will go, consider making this function call another function to display search results in a sub menu
     */

    async Task searchFunction()
    {

    }
}
<style>
    .dark-mode-toggle {
        margin-left: 1em;
        min-width: 190px !important;
    }

    .site-header-label {
        font-size: 28px;
    }

    .site-header-label-button {
        min-width: 283px !important;
    }

    .filter-button {
        height: 54px;
        top: 3px;
        min-width: 80px !important;
        margin-left: 20px;
    }

    .filter-button-text {
        font-size: 18px;
    }

    .main-content {
        padding: 1em;
        width: 50%;
    }

    .hamburger {
    }

    .search-bar {
        //min-width: max-content !important;
        margin-left: 1px;
    }

    .second-top-bar {
        min-width: 100% !important;
        height: 80px;
    }

    .drawer-header {
    }

    .drawer-header-text {
        padding-left: 5px;
    }
</style>