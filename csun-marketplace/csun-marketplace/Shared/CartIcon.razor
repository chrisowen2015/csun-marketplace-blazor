@using System.Globalization

@inject NavigationManager _navMan
@inject CartService _cart
@inject ISnackbar Snackbar

<MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
    <ActivatorContent>
        <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" OnClick="@(() => _navMan.NavigateTo("/cart"))" />
    </ActivatorContent>
    <ChildContent>
        @if (_cart.Length() > 0)
            {
                <div class="cart-popover-flex-col">


                    <div class="cart-popover-flex-row-padding">
                        <MudText Class="cart-total" Align="Align.Center">
                            Cart Total: <b class="cart-subtotal-text"> @formatCurrency(_cart.GetTotal()) </b>
                        </MudText>
                    </div>
                    <div class="cart-popover-flex-row-padding">
                        <MudButton Class="cart-popover-checkout-button" Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => _navMan.NavigateTo("/cart"))">
                            Proceed to Checkout
                        </MudButton>
                    </div>
                     <div class="cart-popover-items-container">


                        @foreach (Product p in _cart.GetCart())
                        {
                            <MudPaper Style="margin-left: 1em; margin-right: 1em; margin-bottom: 1em; padding: .5em;" Elevation="3">
                                <MudContainer Class="cart-product-flex-row" Fixed="true">
                                    <div class="cart-product-img-small">
                                        <MudImage Src="@p.ImageUrl" Height="70" Width="70"  />
                                    </div>
                                    <div class="cart-popover-title-price-flex-col">
                                        <p> @p.Title </p>
                                        <b class="product-price-text"> @formatCurrency(p.Price) </b>
                                    </div>
                                    <MudIconButton Class="cart-remove-icon" Icon="@Icons.Material.Filled.Delete" OnClick="@(()=> RemoveFromCart(p))" />
                                </MudContainer>
                            </MudPaper>
                        }
                    </div>
                </div>
        }
    </ChildContent>
</MudMenu>

@code {
    CultureInfo USD = new CultureInfo("en-US");

    public string formatCurrency(decimal? amount)
    {
        float subtotal = (float) amount;
        return subtotal.ToString("C2", USD);
    }

    public void RemoveFromCart(Product p)
    {
        _cart.RemoveFromCart(p);
        Snackbar.Add("Product successfully removed from Cart.", Severity.Success, config =>
        {
            config.Action = "Undo";
            config.ActionColor = Color.Secondary;
            config.Onclick = snackbar =>
            {
                _cart.UndoRemoveFromCart();
                Snackbar.Clear();
                return Task.CompletedTask;
            };
        });
    }

}

<style>
    .cart-subtotal-text {
        color: #d22030;
    }

    .cart-popover-items-container {
        padding-top: 1em;
        padding-bottom: 1em;
    }

    .cart-popover-flex-row-padding {
        display: flex;
        flex-direction: row !important;
        padding-top: .5em;
        padding-bottom: .5em;
        align-items: center !important;
        justify-content: center !important;
    }

    .cart-popover-flex-col {
        display: flex;
        flex-direction: column !important;
        padding-top: .5em;
        padding-bottom: .5em;
        align-items: center !important;
        justify-content: center !important;
    }


    .cart-popover-title-price-flex-col {
        display: flex;
        flex-direction: column !important;
        justify-content: flex-start !important;
        align-items: center;
        text-align:center;
        margin-left: 1em;
    }


    .cart-product-flex-row {
        display: flex;
        flex-direction: row !important;
        align-items: center !important;
        justify-content: space-between !important;
        padding-top: .5em;
        padding-bottom: .5em;
    }

    .cart-product-img-small{
        margin-left: -1.25em;
        margin-right: 1em;
    }

    .product-price-text {
        margin-top: -15px;
        color: #d22030;
    }

    .cart-remove-icon {
        margin-left: 2em;
        margin-right: -25px;
    }

</style>