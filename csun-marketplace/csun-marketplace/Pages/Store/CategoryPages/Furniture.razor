@page "/furniture"

@inject NavigationManager _navMan
@inject ICSUNMarketplaceService _csunMarketplaceService

<div>
    <MudText Color="Color.Primary" Class="page-header">
        <h2>
            Browse All Furniture
        </h2>
    </MudText>

    <div class="carousel-container">
        <MudCarousel TData="object" Style="height:300px" ShowArrows="false" ShowBullets="false">
            <MudCarouselItem>
                <div class="carousel-background-gradient">
                    <MudImage Class="carousel-background-image" Src="https://cdn.discordapp.com/attachments/959989259492790352/960266585732448336/furniture.jpg" />
                    <div class="carousel-content">
                        <MudText Class="carousel-overlayed-text">
                            <h1>
                                Browse CSUN Marketplace Furniture
                            </h1>
                        </MudText>
                    </div>
                </div>
            </MudCarouselItem>
        </MudCarousel>
    </div>
    <div class="feed-container">
        <div class="feed-content">
            <div class="products-container">
                @if (furnitureToRender != null)
                {
                    @foreach (Product p in furnitureToRender)
                    {
                        <MudPaper class="product-tile" Elevation="7" @onclick=@(()=>ViewProduct(p.ProductId))>
                            <div>
                                <MudImage ObjectPosition="ObjectPosition.Center" Src="@p.ImageUrl" Height="310" Width="310" />
                            </div>
                            <div class="product-tile-header-container">
                                <MudText Class="product-tile-header">
                                    @p.Title
                                </MudText>
                            </div>
                            <div>
                                <MudText Class="product-tile-price">
                                    $@p.Price
                                </MudText>
                            </div>
                            <MudTextField Value="p.Description" ReadOnly="true" Lines="4" Variant="Variant.Outlined" DisableUnderLine="true" Margin="Margin.Dense" />
                        </MudPaper>
                    }
                }
            </div>
        </div>

        <div class="pagination-container">
            <MudPagination Count="@maxNumberOfPages" Color="Color.Primary" SelectedChanged="@((int newPage)=>UpdateProductsOnPage(newPage))" Size="Size.Large" />
        </div>

    </div>
</div>

@code {
    List<Product> furnitureList = new List<Product>();
    List<Product> furnitureToRender = new List<Product>();

    public int itemsPerPage = 6;
    public int maxNumberOfPages = 1;
    public int pageIndex = 1;

    public void ViewProduct(int productId)
    {
        _navMan.NavigateTo("/view-listing/" + productId);
    }

    protected override async Task OnInitializedAsync()
    {
        furnitureList = _csunMarketplaceService.GetFurniture();

        maxNumberOfPages = furnitureList.Count() / itemsPerPage + 1;

        furnitureToRender = new List<Product>();
        for (int i = ((pageIndex - 1) * itemsPerPage); i < itemsPerPage * pageIndex && i < furnitureList.Count(); i++)
        {
            furnitureToRender.Add(furnitureList.ElementAt(i));
        }
    }

    public void UpdateProductsOnPage(int newPage)
    {
        pageIndex = newPage;
        furnitureToRender.Clear();
        furnitureToRender = new List<Product>();

        for (int i = ((pageIndex - 1) * itemsPerPage); i < itemsPerPage * pageIndex && i < furnitureList.Count(); i++)
        {
            furnitureToRender.Add(furnitureList.ElementAt(i));
        }
        StateHasChanged();
    }

}

<style>

</style>