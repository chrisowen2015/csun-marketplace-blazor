@page "/"
@using csun_marketplace.data
@using csun_marketplace.services
@inject ICSUNMarketplaceService _csunMarketplaceService
@inject NavigationManager _navMan

<div class="feed-container">
    <div class="feed-content">

        <div class="products-container">
            @if (productList != null)
            {
                @foreach (Product p in productList)
                {
                    <MudPaper class="product-tile" Elevation=2 @onclick=@(()=>ViewProduct(p.ProductId))>
                        <div>
                            <MudImage Src="@p.ImageUrl" Height="250" Width="250" />
                        </div>
                        <div class="product-tile-header-container">
                            <MudText Class="product-tile-header">
                                @p.Title
                            </MudText>
                        </div>
                        <div>
                            <MudText Class="product-tile-price">
                                $@p.Price
                            </MudText>
                        </div>
                        <div class="product-tile-description-container">
                            <MudText Class="product-tile-description">
                                @p.Description
                            </MudText>
                        </div>

                    </MudPaper>
                }
            }
        </div>
    </div>
</div>


@code {
    public List<Product>? productList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        productList = _csunMarketplaceService.GetProductList();
        foreach (Product p in productList)
        {
            if (p.ImageSource != null)
            {
                string imgSource = Convert.ToBase64String(p.ImageSource);
                try
                {
                    p.ImageUrl = string.Format("data:image/jpg;base64,{0}", imgSource);
                }
                catch (FormatException f)
                {
                    Console.WriteLine("F " + f);
                }
            }
        }
    }

    public void ViewProduct(int productId)
    {
        _navMan.NavigateTo("/product/" + productId);
    }
}
<style>
    .card-img {
        min-width: max-content;
    }

    .feed-container {
        width: 50%;
        min-height: 100% !important;
        margin: auto;
        display: block;
        margin-bottom: 2em;
        margin-top: 1.5em;
    }

    .feed-content {
        min-height: 100% !important;
        align-self: center;
    }

    .product-tile {
        padding: 16px;
        width: 280px;
        height: 450px;
        overflow-y: scroll;
        margin: 5px;
    }

    .products-container {
        display: flex !important;
        flex-direction: row !important;
        flex-flow: row wrap;
        justify-content: space-evenly;
        gap: 16px;
        padding-top: .5em;
        padding-bottom: .5em;
        padding-left: 1em;
        padding-right: 1em;
    }

    .product-tile-header {
        color: #d22030;
        font-weight: bold;
        font-size: 20px;
        padding-top: .5em;
    }

    .product-tile-price {
        font-weight: bold;
        font-size: 20px;
    }

    .product-tile-description {
    }

    .product-tile-description-container {
        overflow: scroll;
    }

    .product-tile-header-container {
    }
</style>
