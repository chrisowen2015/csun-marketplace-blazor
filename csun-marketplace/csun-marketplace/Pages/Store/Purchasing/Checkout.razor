@page "/checkout"
@using System.Globalization
@using csun_marketplace.data;
@using csun_marketplace.services;
@using System;
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity

@inject ICSUNMarketplaceService _csunMarketplaceService
@inject IWebHostEnvironment env
@inject ISnackbar Snackbar
@inject NavigationManager _navMan
@inject AuthenticationStateProvider _authenticationStateProvider
@inject CartService _cart

<div class="page-container">
    <div class="page-content">

        <div class="page-header-container">
            <MudText Class="form-header" Color="Color.Primary">
                <h1>
                    Checkout
                </h1>
            </MudText>
        </div>
        <MudExpansionPanel Text="Shipping Information">
            <div class="form-row">
                <MudTextField Label="Shipping Address" T="string" Variant="Variant.Filled" />
            </div>

            <div class="grid-two">
                <MudTextField Class="elem-half" Label="City" T="string" Variant="Variant.Filled" />
                <MudSelect style="width: 100px;" Label="State" T="string" Variant="Variant.Filled" Dense="true">
                    @foreach (string state in states)
                    {
                        <MudSelectItem T="string" Value="state" />
                    }
                </MudSelect>
            </div>

            <div class="grid-two">
                <MudTextField Class="elem-half" Label="Zip" T="string" Variant="Variant.Filled" Mask="@(new PatternMask("00000"))" />
                <MudTextField Class="elem-half" Label="Country" T="string" Variant="Variant.Filled" Text="United States" ReadOnly="true" />
            </div>
        </MudExpansionPanel>

        <div class="page-header-container">
            <MudText Class="form-header" Color="Color.Primary">
                <h1>
                    Billing
                </h1>
            </MudText>
        </div>

        <MudExpansionPanel Text="Billing Information">
            <div class="grid-two">
                <MudTextField Class="elem-half" Label="First Name" T="string" Variant="Variant.Filled" />
                <MudTextField Class="elem-half" Label="Last Name" T="string" Variant="Variant.Filled" />
            </div>

            <div class="form-row">
                <MudTextField Label="Billing Address" T="string" Variant="Variant.Filled" />
            </div>

            <div class="grid-two">
                <MudTextField Class="elem-half" Label="City" T="string" Variant="Variant.Filled" />
                <MudSelect style="width: 100px;" Label="State" T="string" Variant="Variant.Filled" Dense="true">
                    @foreach (string state in states)
                    {
                        <MudSelectItem T="string" Value="state" />
                    }
                </MudSelect>
            </div>

            <div class="grid-two">
                <MudTextField Class="elem-half" Label="Zip" T="string" Variant="Variant.Filled" Mask="@(new PatternMask("00000"))" />
                <MudTextField Class="elem-half" Label="Country" T="string" Variant="Variant.Filled" Text="United States" ReadOnly="true" />
            </div>

            <div class="form-row">
                <MudTextField Label="Card number" T="string" Variant="Variant.Filled" Mask="@(new PatternMask("0000 0000 0000 0000"))" />
            </div>

            <div class="grid-two">
                <MudTextField Class="elem-half" Label="Expiration date" T="string" Variant="Variant.Filled" Mask="@(new PatternMask("00/00"))" />
                <MudTextField Class="elem-half" Label="Security code" T="string" Variant="Variant.Filled" Mask="@(new PatternMask("000"))" />
            </div>
        </MudExpansionPanel>


        <div class="form-row">
            <MudText Color="Color.Primary">
                <h6>
                    Review Order
                </h6>
            </MudText>
        </div>


            @if (_cart.Length() > 0)
            {
                @foreach (Product p in _cart.GetCart())
                {
                    <MudPaper Style="margin-left: 1em; margin-right: 1em; margin-bottom: 1em; padding: .5em;" Elevation="3">
                        <MudContainer Class="cart-product-flex-row" Fixed="true">
                            <div class="cart-product-img-small">
                                <MudImage Src="@p.ImageUrl" Height="120" Width="120" />
                            </div>
                            <div class="cart-popover-title-price-flex-col">
                                <p> @p.Title </p>
                                <b class="product-price-text"> @formatCurrency(p.Price) </b>
                            </div>
                            <MudIconButton Class="cart-remove-icon" Icon="@Icons.Material.Filled.Delete" OnClick="@(()=> RemoveFromCart(p))" />
                        </MudContainer>
                    </MudPaper>
                }
            }

        <div>
            <div class="go-back">
                <MudButton Variant="Variant.Filled" OnClick="@(()=>_navMan.NavigateTo("/cart"))" Color="Color.Primary">Back</MudButton>
            </div>

            @if (@_cart.GetTotal() > 0)
            {
                <div class="billing-continue">
                    <MudText>
                        Cart Total: $@_cart.GetTotal().ToString()
                    </MudText>
                    <MudButton Variant="Variant.Filled" OnClick="@(()=> OrderComplete())" Color="Color.Primary">Place Order</MudButton>
                    @*<MudButton Variant="Variant.Filled" OnClick="@(()=>_navMan.NavigateTo("/billing"))" Color="Color.Primary">Continue</MudButton>*@
                </div>
            }
            else
            {
                <div class="keep-shopping">
                    <MudButton Variant="Variant.Filled" OnClick="@(()=>_navMan.NavigateTo("/"))" Color="Color.Primary">Keep Shopping</MudButton>
                </div>
            }
        </div>
    </div>
</div>



@code {
    public List<string> states = new List<string>
    {
        "AL", "AK", "AZ", "AR", "CA", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KY", "LA", "ME", "MD", "MA","MI","MN","MS","MO","MT","NE","NV","NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",

    };


    public void OrderComplete()
    {
        _cart.EmptyCart();
        Snackbar.Add("Order Accepted, Thank You!", Severity.Success);
        _navMan.NavigateTo("/thankyou");
    }


    CultureInfo USD = new CultureInfo("en-US");

    public string formatCurrency(decimal? amount)
    {
        float subtotal = (float)amount;
        return subtotal.ToString("C2", USD);
    }

    public void RemoveFromCart(Product p)
    {
        _cart.RemoveFromCart(p);
        Snackbar.Add("Product successfully removed from Cart.", Severity.Success, config =>
        {
            config.Action = "Undo";
            config.ActionColor = Color.Secondary;
            config.Onclick = snackbar =>
            {
                _cart.UndoRemoveFromCart();
                Snackbar.Clear();
                return Task.CompletedTask;
            };
        });
    }
}

<style>
    .upload-image-label {
        margin-left: 1em;
    }

    .img-input-div {
        margin-top: 1em;
    }

    .grid-two {
        display: flex !important;
        flex-direction: row !important;
        justify-content: space-between;
        padding-top: .5em;
        padding-bottom: .5em;
        padding-left: 1em;
        padding-right: 1em;
    }

    .elem-half {
        max-width: 48%;
    }

    .products-container {
        display: flex !important;
        flex-direction: row !important;
        flex-flow: row wrap;
        justify-content: space-evenly;
        gap: 16px;
        padding-top: .5em;
        padding-bottom: .5em;
        padding-left: 1em;
        padding-right: 1em;
    }

    .billing-continue {
        float: right;
    }

    .go-back {
        float: left;
        padding-top: 24px;
    }

    .keep-shopping {
        float: right;
        padding-top: 24px;
    }
</style>
