@page "/view-profile/{userId}"
@using System.Globalization
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@layout StoreLayout

@inject AuthenticationStateProvider _authenticationStateProvider
@inject ICSUNMarketplaceService _csunMarketplaceService
@inject ISnackbar Snackbar
@inject NavigationManager _navMan

<AuthorizeView>
    <Authorized>
        <MudPaper Elevation="5" class="page-container">
            <div class="page-content">
                <div class="flex-it-up">
                    @if (User.FirstName != "")
                    {
                        <MudAvatar Color="Color.Primary" Class="profile-image">
                            @*@context.User.Identity.Name.ToUpper()[0]*@
                            @User.FirstName.ToUpper()[0]
                        </MudAvatar>
                    }
                    else
                    {
                        <MudAvatar Color="Color.Primary" Class="profile-image">
                            @*@context.User.Identity.Name.ToUpper()[0]*@
                            @User.Email.ToUpper()[0]
                        </MudAvatar>
                    }
                    <MudText>
                        <h1>
                            <MudElement @bind-Value="@User.FirstName"> @User.FirstName </MudElement>
                            <MudElement @bind-Value="@User.LastName"> @User.LastName </MudElement>
                        </h1>
                    </MudText>
                    <MudText @bind-Value="@User.Email" Style="align-self:center">
                        <h6>
                            (@User.Email)
                        </h6>
                    </MudText>
                </div>

                @*<div>
                    <MudText Label="First Name" T="string" @bind-Value="@User.FirstName" Variant="Variant.Filled" ReadOnly=readOnly>
                    <h1>
                    @User.FirstName
                    </h1>
                    </MudText>

                    <MudText Label="Last Name" T="string" @bind-Value="@User.LastName" Variant="Variant.Filled" ReadOnly=readOnly>
                    <h1>
                    @User.LastName
                    </h1>
                    </MudText>
                    </div>*@
                @*<div class="profile-rows">
                    <MudTextField Label="Email" T="string" @bind-Value="@User.Email" Variant="Variant.Filled" ReadOnly="true" />
                    </div>*@
                <div class="flex-it-up">
                    @*<MudTextField Label="Join Date" T="DateTime" @bind-Value="@User.JoinDate" Variant="Variant.Filled" ReadOnly="true" />*@
                    <MudText>
                        <h5>
                            Join Date
                        </h5>
                        <p> @User.JoinDate.ToShortDateString() </p>
                    </MudText>
                    <div></div>
                    <div>
                        <MudText Color="Color.Surface">
                            <h5>
                                Seller Rating
                            </h5>
                        </MudText>
                        <MudRating ReadOnly="true" SelectedValue=@User.Rating @bind-Value="@User.Rating" />
                    </div>
                </div>
                @*<div class="profile-rows">
                    <MudTextField Label="Rating" T="byte" @bind-Value="@User.Rating" Variant="Variant.Filled" ReadOnly="true" />
                    </div>*@
                <div class="profile-rows">
                    @*<MudTextField Label="Bio" T="string" @bind-Value="@User.Bio" Variant="Variant.Filled" Lines="5" ReadOnly=readOnly />*@
                    @if (!String.IsNullOrWhiteSpace(User.Bio))
                    {
                        <MudText>
                            <h5>
                                Bio
                            </h5>
                            @User.Bio
                        </MudText>
                    }
                    else
                    {
                        <MudText>
                            <h5>
                                Bio
                            </h5>
                            <p>This user has not written a bio.</p>
                        </MudText>
                    }
                </div>
                <div class="profile-rows">
                    @*<MudTextField Label="Major" T="string" @bind-Value="@User.Major" Variant="Variant.Filled" ReadOnly=readOnly />*@
                    @if (!String.IsNullOrWhiteSpace(User.Major))
                    {
                        <MudText @bind-Value="@User.Major">
                            <h5>
                                Major
                            </h5>
                            @User.Major
                        </MudText>
                    }
                    else
                    {
                        <MudText>
                            <h5>
                                Major
                            </h5>
                            <p>This user has not indicated their major.</p>
                        </MudText>
                    }
                </div>
                <div class="profile-rows">
                    @*<MudSelect Label="Gender" @bind-Value="@User.Gender" T="string" Variant="Variant.Filled" ReadOnly=readOnly>
                        <MudSelectItem T="string" Value="@("Male")" />
                        <MudSelectItem T="string" Value="@("Female")" />
                        <MudSelectItem T="string" Value="@("Other/Nonbinary")" />
                        </MudSelect>*@
                    @if (@User.Gender != null)
                    {
                        <MudText @bind-Value="@User.Gender">
                            <h5>
                                Gender
                            </h5>
                            @User.Gender
                        </MudText>
                    }
                    else
                    {
                        <MudText>
                            <h5>
                                Gender
                            </h5>
                            <p>This user has not indicated their gender.</p>
                        </MudText>
                    }
                </div>
                <div>
                    <MudText>
                        <h2>
                            Other products from this user
                        </h2>
                    </MudText>
                    <div class="products-container">
                        @if (Prod != null)
                        {
                            @foreach (Product p in Prod)
                            {
                                <MudPaper Style="margin-bottom: 1em; padding: .5em;" Elevation="3" Width="100%" @onclick=@(()=>ViewProduct(p.ProductId))>
                                    <MudContainer Fixed="true" Style="padding: .5em !important;">
                                        <MudGrid>
                                            <MudItem lg="2" xl="2">
                                                <MudImage Src="@p.ImageUrl" Height="120" Width="120" />
                                            </MudItem>

                                            <MudItem lg="9" xl="9" Style="display: flex; flex-direction:column; justify-content:space-between !important;">
                                                <MudText Color="Color.Primary">
                                                    <h5> @p.Title </h5>
                                                </MudText>
                                            </MudItem>

                                            <MudItem lg="1" xl="1">
                                                <b class="product-price-text"> @formatCurrency(p.Price) </b>
                                            </MudItem>
                                        </MudGrid>
                                    </MudContainer>
                                </MudPaper>
                            }
                        }
                    </div>
                </div>
                @*<div class="button-single">
                    @if (readOnly)
                    {
                    <MudButton Variant="Variant.Filled" OnClick=@(() => EnableEdit()) Color="Color.Primary">Edit Profile</MudButton>
                    }
                    else
                    {
                    <MudButton Variant="Variant.Filled" OnClick=@(() => UpdateUserInformation()) Color="Color.Primary">Save Changes</MudButton>
                    }
                    </div>*@
            </div>
        </MudPaper>
    </Authorized>
    <NotAuthorized>
        Pls sign in!
    </NotAuthorized>
</AuthorizeView>

@code {

    CultureInfo USD = new CultureInfo("en-US");

    [Parameter]
    public string? userID { get; set; }

    public string? email { get; set; }
    public UserInformation User { get; set; }
    public bool readOnly = true;
    public string success { get; set; }
    public List<Product> Prod { get; set; }

    protected override void OnParametersSet()
    {
        User = _csunMarketplaceService.GetUserInformation(userID);


        if (String.IsNullOrWhiteSpace(User.UserId))
        {
            // User did not already exist

            readOnly = false;

            User.UserId = userID;
            User.Email = email;
            User.JoinDate = System.DateTime.Now;
        }

        Prod = _csunMarketplaceService.GetUsersProducts(userID);

        base.OnParametersSet();
    }

    public void ViewProduct(int productId)
    {
        _navMan.NavigateTo("/view-listing/" + productId);
    }

    public string formatCurrency(decimal? amount)
    {
        float subtotal = (float)amount;
        return subtotal.ToString("C2", USD);
    }

    public void EnableEdit()
    {
        readOnly = false;
    }

    async Task UpdateUserInformation()
    {

        readOnly = true;

        success = _csunMarketplaceService.UpdateUserInformation(User);
        if (!String.IsNullOrWhiteSpace(success))
        {
            Snackbar.Add("Sucessfully Updated User Information!", Severity.Success);
            StateHasChanged();
        }
        else
        {
            // Error pop up, DB error
            Snackbar.Add("There was a problem saving your user information.", Severity.Error);
        }
    }
}

<style>

    .upload-image-label {
        margin-left: 1em;
    }

    .img-input-div {
        margin-top: 1em;
    }

    .two-buttons {
        width: 100%;
        display: flex !important;
        flex-direction: row !important;
        justify-content: space-between;
        padding-top: .5em;
        padding-bottom: .5em;
    }

    .grid-two {
        width: 100%;
        display: flex !important;
        flex-direction: row !important;
        justify-content: space-between !important;
        align-content: space-between !important;
        padding-top: .5em;
        padding-bottom: .5em;
    }

    .elem-half {
        max-width: 48%;
    }

    .products-container {
        display: flex !important;
        flex-direction: row !important;
        flex-flow: row wrap;
        justify-content: space-evenly;
        gap: 16px;
        padding-top: .5em;
        padding-bottom: .5em;
        padding-left: 1em;
        padding-right: 1em;
    }

    .stupid-select {
        max-width: 411.84px;
        min-width: 48%;
        position: absolute;
        right: 0px;
    }

    .flex-it-up {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        margin-top: 2.5em;
        gap: 16px;
    }

    .profile-image {
        margin-top: 3px;
    }

    .profile-rows {
        margin-top: 1em;
        margin-bottom: 1.5em;
    }

</style>